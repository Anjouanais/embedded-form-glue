{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div style=\\\"text-align:center\\\">\\n    <h1>\\n        Payment form\\n    </h1>\\n    <div id=\\\"myPaymentForm\\\"></div>\\n    <pre *ngIf=\\\"response\\\">{{response}}</pre>\\n</div>\\n\"","declare var window:any;\ndeclare var JSON:any;\n\nimport { Component, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport KRGlue from \"@lyracom/embedded-form-glue\";\nimport _ from \"underscore\";\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements AfterViewChecked {\n    called:boolean = false;\n    response:any = null;\n\n\n    constructor(private ref: ChangeDetectorRef) {\n    }\n\n    ngAfterViewChecked() {\n        if (!this.called) {\n            this.called = true;\n            this.createKrypton();\n        }\n    }\n\n    createKrypton() {\n        const self:any = this;\n        const ref:ChangeDetectorRef = this.ref;\n        const getQuery:any = function() {\n            let queryString:any = window.location.href.split(\"?\")[1];\n            let query:any = {};\n\n            let segments:any = queryString.split(\"&\");\n            _.each(segments, segment => {\n                let splittedSegment = segment.split(\"=\");\n                query[splittedSegment[0]] = splittedSegment[1];\n            });\n            return query;\n        };\n\n        let query:any = getQuery();\n        let formToken:string = query.formToken;\n        let endpoint:string = query.endpoint;\n        let publicKey:string = query.publicKey;\n\n        KRGlue.loadLibrary('https://api.payzen.eu', publicKey)\n            .then(KR => KR.setFormConfig({\n                formToken,\n            }))\n            .then(KR => {\n                KR.onSubmit((response:any) => {\n                    self.response = JSON.stringify(response);\n                    ref.detectChanges();\n                });\n                return KR.addForm('#myPaymentForm');\n            })\n            .then(KR => {\n                KR.showForm(KR.result.formId);\n            }).catch(err => {\n                console.log(err);\n            });\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n    declarations: [\n        AppComponent\n    ],\n    imports: [\n        BrowserModule\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}